apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-image-pipeline
spec:
  params:
    - name: source-repo
      type: string
      description: Source code repository
    - name: image-repo
      type: string
      description: Docker image repository
    - name: app-name
      type: string
      description: Application name
  tasks:
    - name: fetch
      taskRef:
        name: git-clone-v0-16-3
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: rudy-demayo-pipeline-assignment
      params:
        - name: url
          # value: https://github.com/cloud-native-garage-method-cohort/rudy-demayo-buildah-assignment.git
          value: "$(params.source-repo)"
    - name: run-tests
      params:
        - name: ARGS
          value:
            - install-ci-test
      runAfter:
        - fetch
      taskRef:
        name: npm
      workspaces:
        - name: source
          workspace: rudy-demayo-pipeline-assignment
    - name: build  
      taskRef:
        name: buildah
        kind: ClusterTask
      workspaces:
        - name: source
          workspace: rudy-demayo-pipeline-assignment
      params:
      - name: IMAGE
        # value: quay.io/rdemayo/buildah-image:0.1
        value: "$(params.image-repo):$(tasks.fetch.results.commit)"
      runAfter:
      - fetch
    - name: create-configuration
      runAfter:
        - build
      taskRef:
        name: create-configuration
      params:
        - name: app-name
          value: "$(params.app-name)"
        - name: source-repo
          value: "$(params.source-repo)"
        - name: commit
          value: "$(tasks.fetch.results.commit)"
        - name: image-repo
          value: "$(params.image-repo)"
        - name: runtime
          value: "js"
      workspaces:
        - name: source
          workspace: rudy-demayo-pipeline-assignment
    - name: deploy
      params:
        - name: app-namespace
          value: "$(context.pipelineRun.namespace)"
        - name: manifest
          value: "$(tasks.create-configuration.results.manifest)"
      runAfter:
        - create-configuration
      taskRef:
        name: deploy
      workspaces:
        - name: source
          workspace: rudy-demayo-pipeline-assignment
  workspaces:
    - name: rudy-demayo-pipeline-assignment